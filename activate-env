#!/bin/bash
# UX-env
# This is virtual environment like chroot.
# For easy managing and wrapping python2 (because archlinux use python3 as default /bin/python) 
# with no any conflict at one terminal session.
# usage : 
#    $ source activate-env
# quit from this : 
#    $ detroy-env

export OLD_PS1=$PS1
if [[ ! -f .env/bin/activate ]]; then
	virtualenv2 .env
fi
source .env/bin/activate

export PS1="(CC) $OLD_PS1"


umk(){

	BASEPATH=$HOME/android
	SRC=$BASEPATH/kernel/UndineX_XR2
	OUT=$SRC/.out
	TOOLS=$BASEPATH/harukachan
	PKG=$TOOLS/Zipychan2
	ACTIVECONF=haruka_wt88047_defconfig
	TCHAIN=$BASEPATH/harukachan/toolchain
	source .uxrc
	export USE_CCACHE=1
	export ARCH=arm
	export CROSS_COMPILE=$TCHAIN/hyperLinaro-arm-eabi-5.1/bin/arm-eabi-

	if  [[ $1 == "clean" ]]; then
		make O=$OUT clean
	elif  [[ $1 == "mrproper" ]]; then
		make O=$OUT mrproper
	elif [[ $1 == "push" ]]; then
		make O=$OUT $ACTIVECONF
	elif [[ $1 == "edit" ]]; then
		make O=$OUT nconfig
	elif [[ $1 == "now" ]]; then
		time make O=$OUT -j3
		[[ -f $OUT/arch/arm/boot/dtImage ]] && rm -v $OUT/arch/arm/boot/dtImage
		dtbToolCM -o $OUT/arch/arm/boot/dtImage -s 2048 -p $OUT/scripts/dtc/ $OUT/arch/arm/boot/
	elif [[ $1 == "dtbonly" ]]; then
		[[ -f $OUT/arch/arm/boot/dtImage ]] && rm -v $OUT/arch/arm/boot/dtImage
		dtbToolCM -o $OUT/arch/arm/boot/dtImage -s 2048 -p $OUT/scripts/dtc/ $OUT/arch/arm/boot/
	elif [[ $1 == "zip" ]]; then
		pushd $PKG
			make zip
		popd
	elif [[ $1 == "sdload" ]]; then
		pushd $PKG
			make sideload
		popd
	elif [[ $1 == "snd" ]]; then
		pushd $PKG
			make send
		popd
	elif [[ $1 == "twrp" ]]; then
		adb reboot recovery
	else
		echo ""
		echo "UX-env v9999999 Ayy lmao."
		echo ""
		echo "Kernel Version : Kernel$LOCALVERSION "
		echo "Kernel Author : $KBUILD_BUILD_USER@$KBUILD_BUILD_HOST"
		echo "Build Count : $(cat $OUT/.version)"
		echo ""
	fi
}
destroy-env() {
	unset ARCH
	unset CROSS_COMPILE
	export PS1=$OLD_PS1
	unset OLD_PS1
	unset -f umk
	unset -f destroy-env
	deactivate
}
